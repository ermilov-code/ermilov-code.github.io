// _variables.scss ____________________________

/*  
Uniform writing style for VARIABLES and CLASSES: 
for VARIABLES - $primary-color, $font-stack
for MIXIN - @mixin display-row-start 
*/


// ============= VARIABLES =============
// COLOR background, text color on white background
$background-color: #FEFEFE;
// background color of cards
$background-color-cards: #F2F2F2;
// COLOR text on dark background
$text-color: #232227;
// COLOR of accent (arrows, buttons :)
$accent-color: #FE4445;
// COLOR menu item
$menu-item-color: #232227;
// COLOR menu item on :hover :focus :active
$menu-item-color-OnHover: #FE4445;
// Button color on :hover :focus :active
$button-color-OnHover: #DC3536;

h1,
h2,
h3 {
    font-family: Jost;
}

span,
p,
a,
input {
    font-family: Lato;
    margin: 0;
    color: $text-color;
    font-style: normal;
    font-weight: normal;
}


// ============= MIXINS =============
// mixin call - @include display-row-start;
// mixin call -	@include responsive-font(40, 24);

// starting POSITIONING
@mixin display-row-start {
    display: flex;
    flex-direction: row;
    justify-content: flex-start;
    align-items: flex-start;
    flex-wrap: wrap;
    // align-content: flex-start;
}

@mixin display($flex-direction, $justify-content, $align-items) {
    display: flex;
    flex-direction: $flex-direction;
    justify-content: $justify-content;
    align-items: $align-items;
    flex-wrap: wrap;
}

// smooth EFFECT | @include smoothness(text-decoration, 0,8s |
@mixin smoothness($property-css, $transition-delay) {
    transition: $property-css $transition-delay;
}

// <div class="container"></div>
// <!-- /.container -->


// mixin for ADAPTIVE FONT
$max-width: 1920;

@mixin responsive-font($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    font-size: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-line-height($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    line-height: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-width($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    width: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-max-width($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    max-width: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-min-width($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    min-width: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-height($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    height: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-min-height($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    min-height: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-padding-top($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    padding-top: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-padding-bottom($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    padding-bottom: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-padding-left($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    padding-left: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-padding-left-right($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    padding-left: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
    padding-right: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-padding-top-bottom($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    padding-top: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
    padding-bottom: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-margin-top($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    margin-top: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-margin-right($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    margin-right: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-margin-bottom($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    margin-bottom: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-margin-left($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    margin-left: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-top($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    top: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-left($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    left: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}




// &:hover,
// &:active {
//     background-color: $button-color-OnHover;
// }







// // template for EFFECTS 
// // @include hover-active-effect(color, $button-color-OnHover, .8s)
// @mixin hover-active-effect($property-css, $property-value-css, $transition-delay) {

//     &:hover,
//     &:active {
//         $property-css: $property-value-css;
//         transition: $property-css $transition-delay;
//     }
// }

// // template for EFFECTS 
// // @include hover-active-effect(color, $button-color-OnHover, .8s)
// @mixin hover-active-effect($property-css, $property-value-css) {

//     &:hover,
//     &:active {
//         $property-css: $property-value-css;
//         // transition: $property-css $transition-delay;
//     }
// }









// ============= / MIXINS =============







// _variables.scss ____________________________