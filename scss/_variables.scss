// _variables.scss ____________________________

/*  
Uniform writing style for VARIABLES and CLASSES: 
for VARIABLES - $primary-color, $font-stack
for MIXIN - @mixin display-row-start 
*/


// ============= VARIABLES =============
// COLOR background, text color on white background
$background-color: #151F28;
// COLOR text on dark background
$text-color: #F4F4F4;
// COLOR of accent (arrows, buttons :)
$accent-color: #00E991;
// COLOR menu item
$menu-item-color: rgba(21, 31, 40, 0.6);
// COLOR menu item on :hover :focus :active
$menu-item-color-OnHover: #151F28;
// Phone button color on :hover :focus :active
$phone-button-color-OnHover: rgba(244, 244, 244, 0.6);


// FONT SIZES:
$font-size-H1: 62px;
$font-size-H2: 32px;
$font-size-H3: 24px;
$font-size-H4: 20px;
$font-size-text: 20px;
$font-size-buttons: 12px;

// indents:
$indent-H2-to-text: 0 0 40px 0;
$indent-H3-to-text: 0 0 10px 0;

// ============= MIXINS =============
// mixin call - @include display-row-start;
// mixin call -	@include responsive-font(40, 24);

// starting POSITIONING
// @mixin display-row-start {
//     display: flex;
//     flex-direction: row;
//     justify-content: flex-start;
//     align-items: flex-start;
//     flex-wrap: wrap;
//     align-content: flex-start;
// }

@mixin display-flex($flex-direction, $justify-content, $align-items) {
    display: flex;
    flex-direction: $flex-direction;
    justify-content: $justify-content;
    align-items: $align-items;
    flex-wrap: wrap;
}

// mixin for ADAPTIVE FONT
$max-width: 1920;

@mixin responsive-font($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    font-size: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-line-height($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    line-height: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-width($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    width: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-max-width($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    max-width: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-height($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    height: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-padding-top($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    padding-top: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-padding-bottom($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    padding-bottom: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-padding-left($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    padding-left: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-margin-bottom($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    margin-bottom: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-margin-left($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    margin-left: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-top($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    top: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}

@mixin responsive-left($desktop-size, $mobile-size) {
    $add-size: $desktop-size - $mobile-size;
    $max-width: $max-width - 320;
    left: calc(#{$mobile-size + px} + #{$add-size} * ((100vw - 320px) / #{$max-width}));
}




// ============= / MIXINS =============







// _variables.scss ____________________________